// Esteban Vergara Giraldo
// Jonathan Betancur Espinoza
// Miguel Angel Cock Cano


// Aliens en una matriz 3 x 5   (3 filas de 5 aliens)
// Pudimos lograr 15 aliens!
// La nave se puede mover con WASD o con las flechas, como gustes

class Main{
    function void main(){
        var Array f1, f2, f3;           //arrays de booleanos sobre existencia de aliens
        var int x, y, xNave, puntaje;   //variables del juego (posición y puntos)
        var int i, frame, anim;         //variables auxiliares para iteración (listas, frames, animaciones)
        var int dir;                    //dirección del desplazamiento horizontal de los aliens (0=izq|1=der)
                                        //no me dejaba manejar condicionales con booleanos por alguna razón

        //posiciones de referencia iniciales de los aliens
        //es el alien inferior izquierdo
        let x = 3;  //va de 0 a 6 mientras los aliens oscilan
        let y = 6;  //va de 6 a 16

        //posición inicial de la nave (13). Va de 0 a 27.
        let xNave = 13;

        // puntaje obtenido por matar aliens.
        // puede subir 100, 150 o 200 puntos dependiendo
        // de la fila del alien al que se mató.
        let puntaje = 0;

        // arrays con booleanos para verificar la existencia
        // de los aliens de una fila (son 3 filas)
        // la f3 está en y, la f2 en y-2 y la f1 en y-4
        let f1 = Array.new(5);
        let f2 = Array.new(5);
        let f3 = Array.new(5);  //fila de enfrente

        // rellenando los arrays con "sí existe"
        let i = 0;
        while(i < 5){
            let f1[i] = true;
            let f2[i] = true;
            let f3[i] = true;
            let i = i + 1;
        }

        // juego durante 16 bajadas de los aliens
        // en el y=16, los aliens tocan la nave y pierde.
        let frame = 0;  // contador de frames
        let anim = 1;  // contador de animaciones

        while(y < 16){

            do Screen.clearScreen();

            do Main.imprimirPuntuaje(puntaje);

            do Main.updateAliens(x, y, anim, f1, f2, f3);

            let xNave = Main.teclaNave(xNave);

            do Main.updateNave(xNave);

            // cada 20 frames , el alien baja
            if(frame = 20){
                let y = y + 1;
                let frame = 0;
                let puntaje = puntaje + 100;    //puntaje provisional
            }

            // cada 4 frames los aliens se mueven horizontalmente
            // el sprite de los aliens (animación) cambia cada 2, pero eso
            // es manejado en el área de dibujo.
            if(anim = 4){
                let anim = 0;

                // dir es dirección, 0 = izq | 1 = der
                //aquí se mueven horizontalmente los aliens

                if(dir=0){              //si los aliens se mueven a la izquierda
                    if(~(x=0)){         //y no han tocado el borde (0)
                        let x = x - 1;  //se moverán más a la izquierda.
                    }else{              //de lo contrario
                        let dir = 1;    //comenzarán a moverse a la derecha
                        let x = x + 1;  
                    }
                }else{                  //si los aliens se mueven a la derecha
                    if(~(x=6)){         //y no han tocado el borde (6)
                        let x = x + 1;  //se moverán más a la derecha.
                    }else{              //de lo contrario
                        let dir = 0;    //comenzarán a moverse a la izquierda
                        let x = x - 1;  
                    }
                }
            }

            let frame = frame + 1;
            let anim = anim + 1;

            // el tiempo de espera de cambio de frames (la velocidad
            // del juego) va subiendo a medida que el juego avanza.
            do Sys.wait(500-(y*20));
        }

        return;
    }

    function void imprimirPuntuaje(int puntaje){
        do Output.moveCursor(0,25);
        do Output.printString("Puntaje: ");
        do Output.printInt(puntaje);
        return;
    }

    function int teclaNave(int xNave){
        var int keyNave;
        // se guarda el ASCII de la tecla que se está presionando
        let keyNave = Keyboard.keyPressed();

        //            leftKey           A
        if((keyNave = 130) | (keyNave = 65)){    
            if(~(xNave = 0)){
                return(xNave - 1);      //izquierda
            }else{
                return(27);             //si está en el borde, aparece a la derecha
            }
        }

        //           rightKey           D
        if((keyNave = 132) | (keyNave = 68)){
            if(~(xNave = 27)){
                return(xNave + 1);      //derecha
            }else{
                return(0);              //si está en el borde, aparece a la izquierda
            }
        }

        //si no se apretó ninguna tecla, no hay actualización
        return(xNave);
    }


    function void updateAliens(int x, int y, int anim, Array f1, Array f2, Array f3){
        var int i, sprite;
        let i = 0;

        // según el conteo de animación, se asigna un sprite para ser dibujado
        if ( (anim=1)|(anim=2) ) {
            let sprite = 1;
        }else{                      //anim = 3 | anim = 4
            let sprite = 2;
        }

        // revisa a los aliens por fila, los que existan los dibuja
        while(i < 5){
            if(f1[i] = true){
                do Main.draw((i*5) + x, y-4, sprite);
            }
            if(f2[i] = true){
                do Main.draw((i*5) + x, y-2, sprite);
            }
            if(f3[i] = true){
                do Main.draw((i*5) + x, y, sprite);
            }
            let i = i + 1;
        }
        return;
    }

    function void draw(int x, int y, int sprite) {
        var int memAddress; 
                    //   screen    vertical    horizontal
        let memAddress = 16386  +  (y*512)  +  x;   //desde donde comienza el dibujo

        // dependiendo del contador de animación, dibuja un sprite u otro
        if (sprite = 1) {
            do Memory.poke(memAddress -224, 2064);
            do Memory.poke(memAddress -192, 1056);
            do Memory.poke(memAddress -160, 4080);
            do Memory.poke(memAddress -128, 7128);
            do Memory.poke(memAddress -96,  16380);
            do Memory.poke(memAddress -64,  12276);
            do Memory.poke(memAddress -32,  10260);
            do Memory.poke(memAddress, 1632);
        }else{  // sprite = 2
            do Memory.poke(memAddress -224, 2064);
            do Memory.poke(memAddress -192, 9252);
            do Memory.poke(memAddress -160, 12276);
            do Memory.poke(memAddress -128, 15324);
            do Memory.poke(memAddress -96,  16380);
            do Memory.poke(memAddress -64,  8184);
            do Memory.poke(memAddress -32,  2064);
            do Memory.poke(memAddress, 4104);
        }
        return;
    }

    // nave pos 0-27, 13 mid
    function void updateNave(int x) {
        var int memAddress; 
        //               screen   horizontal
        let memAddress = 24482 +  x;   //desde donde comienza el dibujo

        do Memory.poke(memAddress -224, 384);
        do Memory.poke(memAddress -192, 384);
        do Memory.poke(memAddress -160, 4080);
        do Memory.poke(memAddress -128, 31710);
        do Memory.poke(memAddress -96,  5064);
        do Memory.poke(memAddress -64,  8184);
        do Memory.poke(memAddress -32,  3504);
        do Memory.poke(memAddress, 12684);

        return;
    }
}